plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    testImplementation 'org.seleniumhq.selenium:selenium-java:4.6.0'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.3.1'
    testImplementation 'com.codeborne:selenide:6.10.1'

    testImplementation 'org.aspectj:aspectjweaver:1.9.9.1'

    testImplementation 'io.qameta.allure:allure-junit5:2.20.1'
    testImplementation 'io.qameta.allure:allure-commandline:2.20.1'
    testImplementation 'io.qameta.allure:allure-assertj:2.20.1'
    testImplementation 'io.qameta.allure:allure-rest-assured:2.20.1'
    testImplementation 'io.qameta.allure:allure-java-commons:2.20.1'
    testImplementation 'io.qameta.allure:allure-selenide:2.20.1'

    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.14.0'

    testImplementation "org.aeonbits.owner:owner:1.0.12"
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'com.google.code.gson:gson:2.10'


}

//test {
//    useJUnitPlatform()
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}